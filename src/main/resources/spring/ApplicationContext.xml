<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	    http://www.springframework.org/schema/context
	    http://www.springframework.org/schema/context/spring-context-3.0.xsd
	    http://www.springframework.org/schema/tx
	    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!--
             ApplicationContext.xml 是 Spring 核心配置文件，一般要配置：

        1. 启用注解
        2. 组件扫描，扫描除了 @Controller 组件
        3. 配置数据源
        4. 配置 SqlSessionFactory 对象
        5. 配置 dao 包的路径
        6. 事务相关配置
    -->

    <!--  启用注解  -->
    <context:annotation-config />


    <!--  启动组件扫描，排除 @Controller 组件，该组件交由 SpringMVC 配置文件扫描  -->
    <context:component-scan base-package="com.lbyx">
        <context:exclude-filter
                type="annotation"
                expression="org.springframework.stereotype.Controller" />
    </context:component-scan>


    <!-- =============  数据源的配置，Spring 整合 Mybatis 后，数据源的配置交给 Spring  ============= -->
    <!--  配置数据库相关参数 properties 的属性   -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--  配置 c3p0 数据库连接池， 这里面的数据参数需要在 jdbc.properties 文件里配置 -->
    <bean id="DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}"/>
        <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"/>
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
    </bean>


    <!--  配置 生成 SqlSessionFactory 对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--  数据库连接池 注入到 SqlSessionFactory 对象  -->
        <property name="dataSource" ref="DataSource"/>
        <!--  指定 Mybatis 所必须的配置文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <!--  扫描 dao 接口对应的动态代理对象 XXXMapper.xml 文件路径  -->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
    </bean>


    <!--  配置扫描 dao 接口包，动态实现 dao 接口，注入到 spring 容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--  注入 sqlSessionFactory  -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--  给出需要扫描 dao 接口包路径 Spring会自动查找其下的接口  -->
        <property name="basePackage" value="com.lbyx.dao"/>
    </bean>


    <!-- ================================  事务相关 配置  ================================ -->
    <!--  配置基于注解的声明式事务，取代 xml 配置的方式  -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--  配置事务管理器  -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--  注入数据库连接池 事务是数据库 增删改 操作特有的， 所以需要指定一个数据源  -->
        <property name="dataSource" ref="DataSource"/>
    </bean>

</beans>